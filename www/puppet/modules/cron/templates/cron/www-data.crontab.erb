# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
MAILTO=webmaster@healthkit.com


# Add cron scheduler command to run every minute to check any job is ready to run from database settings
* * * * * php /home/ubuntu/projects/www/healthkit/app/console --env=prod --no-debug cron:scheduler 1

## AWS migration - Run cron from Monday to Sat every minute
#* * * * 1-6 cd /var/www/healthkit && php /var/www/healthkit/app/console --env=prod --no-debug cron:scheduler

## AWS migration - Run cron on Sunday till 2am
#* 0-2 * * 7 cd /var/www/healthkit && php /var/www/healthkit/app/console --env=prod --no-debug cron:scheduler

## activate maintenance mode
#1 3 * * 7 cd /var/www/healthkit && && nohup bin/live/maintenance-on.sh > /dev/null 2>&1 &
